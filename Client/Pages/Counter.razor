@page "/counter"
@inject ActivePageService ActivePageService
@inject HttpClient Http
@inject IToastService toastService
<PageTitle>Show Orders</PageTitle>
<h1>Visual display of all orders</h1>
<style>

    .on-loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(128, 128, 128, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 999;
    }

    .loader {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1000;
    }
</style>
@if (ordersName != null){
    <div>
        <label for="stateInput">Select an order:</label>
        <input type="text" id="orderSearch" @bind="selectedOrderName" list="ordersNameArray" placeholder="Search for orders" />
        <datalist id="ordersNameArray">
            @foreach (var orderName in ordersName)
            {
                <option value="@orderName"></option>
            }
        </datalist>
        @if (selectedOrderName != "")
        {
            <button @onclick="GetOneOrder" class="btn btn-primary" style="margin-right: 10px;">Receive the selected order</button>
        }
        <button @onclick="GetAllOrders" class="btn btn-success">Get all orders</button>
    </div>
    if (orders != null)
    {
        <link rel="stylesheet" href="css/styles.css" />
        @foreach (var order in orders)
        {
            <div class="order">
                <h4>Order Name: @order.Name</h4>
                <h4>State: @order.State</h4>
                <div class="windows">
                    @if (order.Windows.Count != 0)
                    {
                        <h5>Windows:</h5>
                        @foreach (var window in order.Windows)
                        {
                            <div class="window">
                                <p>Window: @window.Name</p>
                                <p>Quantity of Windows: @window.QuantityOfWindows</p>
                                <p>Total SubElements: @window.TotalSubElements</p>
                                <div class="sub-elements">
                                    <h6>SubElements:</h6>
                                    @foreach (var subElement in window.SubElements)
                                    {
                                        <p>Element: @subElement.Id, Type: @subElement.Type, Width: @subElement.Width, Height: @subElement.Height</p>
                                    }
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        }
    }
}
@if (IsLoading)
{
    <div class="on-loading-overlay" id="app">
        <div class="loader">
            <img src="gifs/loader.gif" alt="Loading..." class="loader-image" />
        </div>
    </div>
}
<BlazoredToasts />
@code {
    private Order[]? orders;
    private string[]? ordersName;
    private string selectedOrderName = "";
    private bool IsLoading = false;
    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;
        ActivePageService.ActivePage = "counter";
        ordersName = await Http.GetFromJsonAsync<string[]>("Order/GetOrdersName");
        IsLoading = false;
        StateHasChanged();
    }
    private async void GetAllOrders()
    {        
        orders = await Http.GetFromJsonAsync<Order[]>("Order/GetAllOrders");
        selectedOrderName = "";
        StateHasChanged();
    }
    private async void GetOneOrder()
    {
        if (selectedOrderName != "")
        {
            var order = await Http.GetFromJsonAsync<Order[]>($"Order/GetOneOrder?nameOrder={selectedOrderName}");
            if (order != null && order.Length!= 0)
            {
                orders = order;
            }
            else
            {
                toastService.ShowInfo($"No order found");
            }
            StateHasChanged();
        }
        else
            toastService.ShowInfo($"Order name not selected");
    }
}
